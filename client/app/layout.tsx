"use client";
import React, { useEffect } from 'react';
import "../styles/globals.css";
import Head from 'next/head';
import Header from './layouts/header';
import Footer from './layouts/footer';
import { Provider } from 'react-redux';
import { store } from '../redux/store';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import localFont from "next/font/local";
import Script from "next/script";
import ReactQueryProvider from './ReactQueryProvider';
import { useInitSession } from '@/components/shared/api/hooks/useCurrentUser';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  useInitSession();

  return (
    <Provider store={store}>
      <ReactQueryProvider>
        <html lang="en">
          <body className={`${geistSans.variable} ${geistMono.variable}`}>
            <div className="App">
              <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>

              <Header />

              <div className="container">
                {children}
                <Footer />
              </div>

              <ToastContainer
                autoClose={8000}
                draggable={false}
                position="top-center"
              />

              <Script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js"></Script>
              <Script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></Script>
              <Script
                src="https://kit.fontawesome.com/fbadad80a0.js"
                crossOrigin="anonymous"
              ></Script>
            </div>
          </body>
        </html>
      </ReactQueryProvider>
    </Provider>
  );
}
